= form_tag events_path, class: 'form-horizontal events-form', method: 'GET' do
  = hidden_field_tag :stream, params[:stream]
  .row
    .col-sm-1
      = select_tag :stream, options_from_collection_for_select(Stream.all, 'slug', 'name', @stream.try(:slug)), include_blank: '-- Stream --', class: 'form-control', onchange: "$(this).closest('form').submit();"
    .col-sm-1
      = select_tag 'aggregate[function]', options_for_select({'COUNT' => 'count', 'AVERAGE' => 'average', 'SUM' => 'sum'}, params[:aggregate].try(:[], :function)), include_blank: '-- Aggregate Function --', class: 'form-control'
    .col-sm-1
      = select_tag 'aggregate[field]', options_for_select(@fields, params[:aggregate].try(:[], :field)), include_blank: '-- Aggregate Field --', class: 'form-control'
    .col-sm-1
      = select_tag 'aggregate[group]', options_for_select(['$time'] + @fields, params[:aggregate].try(:[], :group)), include_blank: '-- Grouping --', class: 'form-control'
    .col-sm-8
      .input-group{class: "#{(@hql_query.valid? ? 'has-success' : 'has-error') if @hql_query}"}
        = text_field_tag :hql, params[:hql], placeholder: "HQL e.g. agent = 'Mozilla/5.0 (googlebot 1.0)' path ~ /settings", class: 'form-control', autocomplete: 'off'
        .input-group-btn
          = button_tag type: 'submit', class: 'btn btn-block btn-primary', name: nil do
            %span.fa.fa-search
    .col-sm-1


- if @events.present?
  #chart-event-trend.chart
  %br

.container-fluid
  - if @stream.nil?
    %br
    %br
    %br
    .text-center.text-muted
      Please select a stream to filter results

  - elsif @events.count === 0
    %br
    %br
    %br
    .text-center.text-muted
      No results for your filter

  - else
    .clearfix
      .pull-left
        Found
        %strong
          = number_with_delimiter @events.except(:limit, :offset, :order).count
        events in
        %strong
          = number_with_precision @elapsed * 1000, precision: 2
          ms
    %hr
    .table-responsive
      %table.table.table-striped
        - if params[:aggregate] && params[:aggregate][:function].present?
          %thead
            %tr
              %th{width: 100}
                Key
              %th
                Value
          %tbody
            - @events.each do |key, value|
              %tr
                %td
                  = key
                %td
                  = value
        - else
          %thead
            %tr
              %th{width: 100}
                Time
              - @fields.each do |column|
                %th.text-center
                  = column
          %tbody
            - @events.each do |event|
              %tr
                %td.text-right
                  %small.text-muted
                    = event.created_at.strftime('%Y-%m-%d %H:%M')
                - @fields.each do |column|
                  %td.text-center
                    - if event.data[column]
                      = event.data[column]
                    - else
                      %span.text-muted
                        \-

- if @events.present?
  :javascript
    $(document).on('ready', function () {
      Hoard.renderAreaChart('#chart-event-trend', #{events_for_graphing.to_json});
    });

